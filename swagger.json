{
  "openapi": "3.0.1",
  "info": {
    "title": "web-transactions-service API",
    "description": "Web transaction service",
    "version": "0.0.1-SNAPSHOT"
  },
  "servers": [
    {
      "url": "https://dev.lineupapp.digital/web/transactions-service",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/transaction": {
      "get": {
        "tags": [
          "Transaction Module"
        ],
        "summary": "Get transaction history",
        "description": "Retrieve the last 15 transactions paginated",
        "operationId": "getTransactionHistory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionResponseChannelDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "client oauth2": []
          }
        ]
      }
    },
    "/transaction/{id}": {
      "get": {
        "tags": [
          "Transaction Module"
        ],
        "summary": "Transaction Detail",
        "description": "Retrieve Transaction data",
        "operationId": "geTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseChannelDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "client oauth2": []
          }
        ]
      }
    },
    "/account/balance": {
      "get": {
        "tags": [
          "Account Module"
        ],
        "summary": "Get account balance",
        "description": "Retrieve loyalty program account balance",
        "operationId": "retrieveBalance",
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBalanceResponseChannelDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "client oauth2": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "TransactionResponseChannelDTO": {
        "required": [
          "amount",
          "code",
          "date",
          "description",
          "id",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "POINTS_PURCHASE",
              "POINTS_COLLECT",
              "POINTS_REVERSE",
              "POINTS_PURCHASE_REVERSAL",
              "CARD_PURCHASE"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_EXECUTED",
              "FAILED",
              "PENDING",
              "COMPLETED"
            ]
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "isReversed": {
            "type": "boolean"
          },
          "relatedPaymentId": {
            "type": "string"
          },
          "reversalTransactionId": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "RetrieveBalanceResponseChannelDTO": {
        "required": [
          "balance"
        ],
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "format": "double"
          }
        }
      }
    }
  }
}

