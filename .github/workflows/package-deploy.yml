on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
    secrets:
      TOKEN:
        required: true


env:
  BUILD_SHA: ${{ github.sha }}
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  SERVICE_NAME: ${{inputs.SERVICE_NAME}}
  PACKAGE_NAME: "com.lineup.${{inputs.SERVICE_NAME}}-api"
  PACKAGE_TYPE: "maven"
  ORG: "Nilo-Innovation"

jobs:
  obtener-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Obtener la versión más reciente del paquete
        run: |
          VERSION=$(curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "https://api.github.com/orgs/${{ env.ORG }}/packages/${{ env.PACKAGE_TYPE }}/${{ env.PACKAGE_NAME }}/versions" | jq -r '.[0].name' | xargs)
          echo "La versión más reciente es: $VERSION"
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
  
      - name: Usar la versión del paquete
        run: |
          echo "Usando la versión del paquete: $PACKAGE_VERSION"

      - name: Leer versión de build.gradle.kts
        id: gradle_version
        run: |
          GRADLE_VERSION=$(grep 'version =' ./${{ env.SERVICE_NAME }}-api/build.gradle.kts | sed "s/version = //g" | tr -d '"' | tr -d ',' | xargs)
          echo "Versión en build.gradle.kts: $GRADLE_VERSION"
          echo "gradle_version=$GRADLE_VERSION" >> $GITHUB_ENV

      - name: Comparar versiones
        run: |
          if [ "$PACKAGE_VERSION" != "$GRADLE_VERSION" ]; then
            echo "Las versiones no coinciden. Desencadenando acción..."
            # Aquí puedes desencadenar la acción que necesitas
          else
            echo "Las versiones coinciden. No se requiere acción."
          fi