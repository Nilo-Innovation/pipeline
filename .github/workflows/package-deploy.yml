on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
    secrets:
      TOKEN:
        required: true


env:
  BUILD_SHA: ${{ github.sha }}
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  SERVICE_NAME: ${{inputs.SERVICE_NAME}}
  PACKAGE_NAME: "com.lineup.${{inputs.SERVICE_NAME}}-api"
  PACKAGE_TYPE: "maven"
  ORG: "Nilo-Innovation"

jobs:
  obtener-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache/restore@v3
        with: 
          path: ${{  env.SERVICE_NAME  }}/build
          key: ${{ runner.os }}-gradlew-${{  env.SERVICE_NAME  }}-${{ github.sha }}

      - name: ☕ Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - name: 🐘 Stop Gradle Daemon(s)
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: --stop
          gradle-version: 7.4.2

      - name: Obtener la versión más reciente del paquete
        run: |
          VERSION=$(curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "https://api.github.com/orgs/${{ env.ORG }}/packages/${{ env.PACKAGE_TYPE }}/${{ env.PACKAGE_NAME }}/versions" | jq -r '.[0].name' | tr -d '"' | tr -d ',' | tr -d '\n' | xargs)
          GIT_VERSION=$(echo "$VERSION")
          echo "La versión reciente del paquete es: $GIT_VERSION"
          echo "PACKAGE_VERSION=$GIT_VERSION" >> $GITHUB_ENV

      - name: Leer versión de build.gradle.kts
        id: gradle_version
        run: |
          GRADLE_VERSION=$(grep 'version =' ./${{ env.SERVICE_NAME }}-api/build.gradle.kts | sed "s/version = //g" | tr -d '"' | tr -d ',' | xargs)
          G_VERSION=$(echo "$GRADLE_VERSION")
          echo "Versión en build.gradle.kts: $G_VERSION"
          echo "gradle_version=$G_VERSION" >> $GITHUB_ENV

      - name: Comparar versiones
        run: |
          if [ "$PACKAGE_VERSION" != "$gradle_version" ]; then
            echo "Las versiones no coinciden. Desplegando artefacto al Package Registry..."
            ./gradlew publish
          else
            echo "Las versiones coinciden. No se desplegara artefacto al Package Registry."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          GITHUB_USERNAME: bgarridop
      - name: Notify Slack on Failure
        if: failure()
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"#pipeline-notifications\", \"username\": \"'${{ github.actor }}'\", \"text\": \"Artefact deploy ${{ env.SERVICE_NAME }} failed! See details: '${{ github.workflow }} - https://github.com/Nilo-Innovation/${{ env.SERVICE_NAME }}/actions'.\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Notify Slack on Success
        if: success()
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"#pipeline-notifications\", \"username\": \"'${{ github.actor }}'\", \"text\": \"Artefact deploy ${{ env.SERVICE_NAME }} succeeded (validate if you uploaded or found a match.)! See details: '${{ github.workflow }} - https://github.com/Nilo-Innovation/${{ env.SERVICE_NAME }}/actions'.\"}" ${{ secrets.SLACK_WEBHOOK_URL }}